{"version":3,"sources":["../../../src/components/fields/AutoField.js"],"names":["componentOverwrites","Object","Array","String","AutoField","props","getFieldProps","undefined","ensureValue","action","context","uniforms","isDisabled","field","disabled","component","componentOverwrite","get","fieldType","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACO,IAAMA,oDAAsB,kBAAQ,CACzC,CAACC,MAAD,sBADyC,EAEzC,CAACC,KAAD,sBAFyC,EAGzC,CAACC,MAAD,sBAHyC,CAAR,CAA5B;;IAMcC,S;;;;;;;;;;6BAGV;AACP;AACA,UAAMC,QAAQ,KAAKC,aAAL,CAAmBC,SAAnB,EAA8B,EAAEC,aAAa,KAAf,EAA9B,CAAd;AACA,UAAMC,SAAS,KAAKC,OAAL,CAAaC,QAAb,CAAsBF,MAArC;AACA,UAAMG,aAAaP,MAAMQ,KAAN,CAAYF,QAAZ,IAAwBN,MAAMQ,KAAN,CAAYF,QAAZ,CAAqBG,QAAhE;AACA,UAAIL,WAAW,QAAX,IAAuBG,UAA3B,EAAuC,OAAO,IAAP;AACvC,UAAIG,YAAYV,MAAMU,SAAtB;AACA,UAAMC,qBAAqBhB,oBAAoBiB,GAApB,CAAwBZ,MAAMa,SAA9B,CAA3B;AACA,UAAI,CAACH,SAAD,IAAcC,kBAAlB,EAAsC;AACpCD,oBAAY,2BAAYC,kBAAZ,CAAZ;AACD;AACD,UAAI,CAACD,SAAL,EAAgB;AACdA,oBAAY,+CAAZ;AACD;AACD,aAAO,0BAAcA,SAAd,6BAA8BV,KAA9B,EAAP;AACD;;;;;AAlBkBD,S,CACZe,W,GAAc,W;kBADFf,S","file":"AutoField.js","sourcesContent":["import { createElement } from 'react';\nimport BaseAutoField from 'uniforms-bootstrap4/AutoField';\nimport fieldColumn from './fieldColumn';\nimport NestField from './NestField';\nimport ListField from './ListField';\nimport TextField from './TextField';\n\n// Component overwrites\nexport const componentOverwrites = new Map([\n  [Object, NestField],\n  [Array, ListField],\n  [String, TextField],\n]);\n\nexport default class AutoField extends BaseAutoField {\n  static displayName = 'AutoField';\n\n  render() {\n    // this.getFieldProps also returns props from context, such as uniforms props:\n    const props = this.getFieldProps(undefined, { ensureValue: false });\n    const action = this.context.uniforms.action;\n    const isDisabled = props.field.uniforms && props.field.uniforms.disabled;\n    if (action === 'create' && isDisabled) return null;\n    let component = props.component;\n    const componentOverwrite = componentOverwrites.get(props.fieldType);\n    if (!component && componentOverwrite) {\n      component = fieldColumn(componentOverwrite);\n    }\n    if (!component) {\n      component = fieldColumn(BaseAutoField);\n    }\n    return createElement(component, { ...props });\n  }\n}\n"]}